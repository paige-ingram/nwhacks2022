// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
import React, { useContext, createContext } from 'react';
/**
 * @private
 */
export const CallContext = createContext(undefined);
/**
 * @private
 */
const CallProviderBase = (props) => {
    const { children, call } = props;
    const initialState = {
        call
    };
    return React.createElement(CallContext.Provider, { value: initialState }, children);
};
/**
 * A {@link React.Context} that stores a {@link @azure/communication-calling#Call}.
 *
 * Calling components from this package must be wrapped with a {@link CallProvider}.
 *
 * @public
 */
export const CallProvider = (props) => React.createElement(CallProviderBase, Object.assign({}, props));
/**
 * Hook to obtain {@link @azure/communication-calling#Call} from the provider.
 *
 * Useful when implementing a custom component that utilizes the providers
 * exported from this library.
 *
 * @public
 */
export const useCall = () => {
    var _a;
    return (_a = useContext(CallContext)) === null || _a === void 0 ? void 0 : _a.call;
};
//# sourceMappingURL=CallProvider.js.map