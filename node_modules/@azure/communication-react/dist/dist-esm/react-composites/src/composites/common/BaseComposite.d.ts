import { PartialTheme, Theme } from '@fluentui/react';
import { ParticipantMenuItemsCallback } from "../../../../react-components/src";
import React from 'react';
import { ChatCompositeIcons } from '..';
import { CompositeLocale } from '../localization';
import { AvatarPersonaDataCallback } from './AvatarPersona';
import { CallCompositeIcons } from './icons';
/**
 * Properties common to all composites exported from this library.
 *
 * @public
 */
export interface BaseCompositeProps<TIcons extends Record<string, JSX.Element>> {
    /**
     * Fluent theme for the composite.
     *
     * @defaultValue light theme
     */
    fluentTheme?: PartialTheme | Theme;
    /**
     * Custom Icon override for the composite.
     * A JSX element can be provided to override the default icon.
     */
    icons?: TIcons;
    /**
     * Locale for the composite.
     *
     * @defaultValue English (US)
     */
    locale?: CompositeLocale;
    /**
     * Whether composite is displayed right-to-left.
     *
     * @defaultValue false
     */
    rtl?: boolean;
    /**
     * A callback function that can be used to provide custom data to Avatars rendered
     * in Composite.
     */
    onFetchAvatarPersonaData?: AvatarPersonaDataCallback;
    /**
     * A callback function that can be used to provide custom menu items for a participant in
     * participant list.
     */
    onFetchParticipantMenuItems?: ParticipantMenuItemsCallback;
}
/**
 * A base class for composites.
 * Provides common wrappers such as FluentThemeProvider and LocalizationProvider.
 *
 * @private
 */
export declare const BaseComposite: (props: BaseCompositeProps<CallCompositeIcons | ChatCompositeIcons> & {
    children: React.ReactNode;
}) => JSX.Element;
//# sourceMappingURL=BaseComposite.d.ts.map