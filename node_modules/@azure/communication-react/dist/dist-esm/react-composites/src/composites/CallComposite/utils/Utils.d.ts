import { CallAdapterState, CallCompositePage } from '../adapter/CallAdapter';
import { CallControlOptions } from '../components/CallControls';
import { CallState } from "../../../../../calling-stateful-client/src";
/**
 * @private
 */
export declare const isCameraOn: (state: CallAdapterState) => boolean;
/**
 * Reduce the set of call controls visible on mobile.
 * For example do not show screenshare button.
 *
 * @private
 */
export declare const reduceCallControlsForMobile: (callControlOptions: CallControlOptions | boolean | undefined) => CallControlOptions | false;
/**
 * Get the current call composite page based on the current call composite state
 *
 * @param Call - The current call state
 * @param previousCall - The state of the most recent previous call that has ended.
 *
 * @remarks - The previousCall state is needed to determine if the call has ended.
 * When the call ends a new call object is created, and so we must lookback at the
 * previous call state to understand how the call has ended. If there is no previous
 * call we know that this is a fresh call and can display the configuration page.
 *
 * @private
 */
export declare const getCallCompositePage: (call: CallState | undefined, previousCall: CallState | undefined) => CallCompositePage;
//# sourceMappingURL=Utils.d.ts.map