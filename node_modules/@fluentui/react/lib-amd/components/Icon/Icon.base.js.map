{"version":3,"file":"Icon.base.js","sourceRoot":"../src/","sources":["components/Icon/Icon.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport { IIconProps, IconType, IIconStyleProps, IIconStyles } from './Icon.types';\nimport { Image } from '../Image/Image';\nimport { ImageLoadState, IImageProps } from '../Image/Image.types';\nimport { getNativeProps, htmlElementProperties, classNamesFunction } from '../../Utilities';\nimport { getIconContent } from './FontIcon';\n\nexport interface IIconState {\n  imageLoadError: boolean;\n}\n\nconst getClassNames = classNamesFunction<IIconStyleProps, IIconStyles>({\n  // Icon is used a lot by other components.\n  // It's likely to see expected cases which pass different className to the Icon.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nexport class IconBase extends React.Component<IIconProps, IIconState> {\n  constructor(props: IIconProps) {\n    super(props);\n    this.state = {\n      imageLoadError: false,\n    };\n  }\n\n  public render() {\n    const { children, className, styles, iconName, imageErrorAs, theme } = this.props;\n    const isPlaceholder = typeof iconName === 'string' && iconName.length === 0;\n    const isImage =\n      // eslint-disable-next-line deprecation/deprecation\n      !!this.props.imageProps || this.props.iconType === IconType.image || this.props.iconType === IconType.Image;\n    const iconContent = getIconContent(iconName) || {};\n    const { iconClassName, children: iconContentChildren } = iconContent;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      className,\n      iconClassName,\n      isImage,\n      isPlaceholder,\n    });\n\n    const RootType = isImage ? 'span' : 'i';\n    const nativeProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, htmlElementProperties, [\n      'aria-label',\n    ]);\n    const { imageLoadError } = this.state;\n    const imageProps: IImageProps = {\n      ...this.props.imageProps,\n      onLoadingStateChange: this._onImageLoadingStateChange,\n    };\n    const ImageType = (imageLoadError && imageErrorAs) || Image;\n\n    // eslint-disable-next-line deprecation/deprecation\n    const ariaLabel = this.props['aria-label'] || this.props.ariaLabel;\n    const accessibleName = imageProps.alt || ariaLabel;\n    const hasName = !!(\n      accessibleName ||\n      this.props['aria-labelledby'] ||\n      imageProps['aria-label'] ||\n      imageProps['aria-labelledby']\n    );\n    const containerProps = hasName\n      ? {\n          role: isImage ? undefined : 'img',\n          'aria-label': isImage ? undefined : accessibleName,\n        }\n      : {\n          'aria-hidden': true,\n        };\n\n    return (\n      <RootType data-icon-name={iconName} {...containerProps} {...nativeProps} className={classNames.root}>\n        {isImage ? <ImageType {...imageProps} /> : children || iconContentChildren}\n      </RootType>\n    );\n  }\n\n  private _onImageLoadingStateChange = (state: ImageLoadState): void => {\n    if (this.props.imageProps && this.props.imageProps.onLoadingStateChange) {\n      this.props.imageProps.onLoadingStateChange(state);\n    }\n    if (state === ImageLoadState.error) {\n      this.setState({ imageLoadError: true });\n    }\n  };\n}\n"]}